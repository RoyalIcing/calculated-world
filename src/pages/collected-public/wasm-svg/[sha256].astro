---
import { joinBodyChunks } from "../../../wasm/wasmBodyChunks";

const sha256 = Astro.params.sha256 as string;

const url = `https://storage.googleapis.com/collected-public/sha256/application/wasm/${sha256}.wasm`;
const res = await fetch(url);
if (res.status >= 400) {
  return new Response(`Status: ${res.status}`, {
    headers: { "content-type": "text/plain; charset=utf-8" },
  });
}

const memory = new WebAssembly.Memory({ initial: 2 });
const { instance } = await WebAssembly.instantiate(await res.arrayBuffer(), {
  env: {
    buffer: memory,
  },
});

for (const [key, value] of Astro.url.searchParams) {
  if (key.startsWith("global.")) {
    const globalName = key.slice("global.".length);
    const global = instance.exports[globalName];
    console.log(globalName, global);
    if (global instanceof WebAssembly.Global) {
      if (value.startsWith("0x")) {
        global.value = parseInt(value, 16);
      } else {
        global.value = parseInt(value);
      }
    }
  }
}

let body = joinBodyChunks(instance.exports, memory);
// We need the xmlns for it to render properly in browsers.
if (!body.includes("http://www.w3.org/2000/svg")) {
  body = body.replace(/^<svg/, `<svg xmlns="http://www.w3.org/2000/svg"`);
}
return new Response(body, {
  headers: {
    "content-type": "image/svg+xml",
    "cache-control": "s-maxage=604800, max-age=604800"
  },
});
---
